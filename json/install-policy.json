{
  "command": "install-policy",
  "description": "Executes the install-policy on a given list of targets.",
  "request": {
    "url": "POST https://<mgmt-server>:<port>/web_api/install-policy",
    "headers": [
      {
        "name": "Content-Type",
        "value": "application/json",
        "description": "Send JSON object to use the API Web Services"
      },
      {
        "name": "X-chkp-sid",
        "value": "string token",
        "description": "Session unique identifier as it returned by the login request"
      }
    ],
    "body": [
      {
        "name": "policy-package",
        "description": "The name of the Policy Package to be installed.",
        "type": "string",
        "required": true
      },
      {
        "name": "targets",
        "description": "On what targets to execute this command. In case 'Specific gateways' is chosen, input installation targets must be in the specific targets list of the policy package. Targets may be identified by their name or object unique identifier.",
        "type": "string",
        "required": false
      },
      {
        "name": "access",
        "description": "Set to be true in order to install the Access Control policy. By default, the value is true if Access Control policy is enabled on the input policy package, otherwise false.",
        "type": "boolean",
        "required": false,
        "default": "Depends on the policy package"
      },
      {
        "name": "desktop-security",
        "description": "Set to be true in order to install the Desktop Security policy. By default, the value is true if desktop security policy is enabled on the input policy package, otherwise false.",
        "type": "boolean",
        "required": false,
        "default": "Depends on the policy package"
      },
      {
        "name": "qos",
        "description": "Set to be true in order to install the QoS policy. By default, the value is true if Quality-of-Service policy is enabled on the input policy package, otherwise false.",
        "type": "boolean",
        "required": false,
        "default": "Depends on the policy package"
      },
      {
        "name": "threat-prevention",
        "description": "Set to be true in order to install the Threat Prevention policy. By default, the value is true if Threat Prevention policy is enabled on the input policy package, otherwise false.",
        "type": "boolean",
        "required": false,
        "default": "Depends on the policy package"
      },
      {
        "name": "install-on-all-cluster-members-or-fail",
        "description": "Relevant for the gateway clusters. If true, the policy is installed on all the cluster members. If the installation on a cluster member fails, don't install on that cluster.",
        "type": "boolean",
        "required": false,
        "default": "true"
      },
      {
        "name": "prepare-only",
        "description": "If true, prepares the policy for the installation, but doesn't install it on an installation target.",
        "type": "boolean",
        "required": false,
        "default": "false"
      },
      {
        "name": "revision",
        "description": "The UID of the revision of the policy to install.",
        "type": "string",
        "required": false,
        "default": "the most recent revision"
      },
      {
        "name": "ignore-warnings",
        "description": "Install policy ignoring policy mismatch warnings.",
        "type": "boolean",
        "required": false
      }
    ]
  },
  "response": {
    "success": [
      {
        "name": "task-id",
        "description": "Asynchronous task unique identifier. Use show-task command to check the progress of the task.",
        "type": "string",
        "required": false
      }
    ],
    "failure": [
      {
        "name": "message",
        "description": "Operation status.",
        "type": "string",
        "required": false
      },
      {
        "name": "warnings",
        "description": "",
        "type": "array",
        "required": false
      },
      {
        "name": "current-session",
        "description": "Validation related to the current session.",
        "type": "boolean",
        "required": false
      },
      {
        "name": "message",
        "description": "Validation message.",
        "type": "string",
        "required": false
      },
      {
        "name": "errors",
        "description": "",
        "type": "array",
        "required": false
      },
      {
        "name": "current-session",
        "description": "Validation related to the current session.",
        "type": "boolean",
        "required": false
      },
      {
        "name": "message",
        "description": "Validation message.",
        "type": "string",
        "required": false
      },
      {
        "name": "blocking-errors",
        "description": "",
        "type": "array",
        "required": false
      },
      {
        "name": "current-session",
        "description": "Validation related to the current session.",
        "type": "boolean",
        "required": false
      },
      {
        "name": "message",
        "description": "Validation message.",
        "type": "string",
        "required": false
      },
      {
        "name": "code",
        "description": "Error code.",
        "type": "string",
        "required": false,
        "valid_values": [
          "generic_error",
          "generic_err_invalid_syntax",
          "generic_err_invalid_parameter_name",
          "not_implemented",
          "generic_internal_error",
          "generic_server_error",
          "generic_server_initializing",
          "generic_err_command_not_found",
          "generic_err_command_version_not_found",
          "generic_err_invalid_api_type",
          "generic_err_invalid_api_object_feature",
          "generic_err_missing_required_parameters",
          "generic_err_missing_required_header",
          "generic_err_invalid_header",
          "generic_err_invalid_parameter",
          "generic_err_normalize",
          "err_bad_url",
          "err_unknown_api_version",
          "err_login_failed_wrong_username_or_password",
          "err_login_failed_more_than_one_opened_session",
          "err_login_failed",
          "err_already_connected",
          "err_normalization_failed",
          "err_validation_failed",
          "err_submit_failed",
          "err_publish_failed",
          "generic_err_missing_session_id",
          "generic_err_wrong_session_id",
          "generic_err_session_expired",
          "generic_err_session_in_use",
          "err_switch_session_failed",
          "err_connect_session_failed",
          "err_assign_session_failed",
          "err_take_over_session_failed",
          "generic_err_no_permissions",
          "err_forbidden",
          "err_not_a_system_domain_session",
          "err_inappropriate_domain_type",
          "generic_err_object_not_found",
          "generic_err_object_field_not_unique",
          "generic_err_object_type_wrong",
          "generic_err_object_locked",
          "generic_err_object_deletion",
          "err_ha_invalid_operation",
          "err_policy_installation_failed",
          "err_policy_verification_failed",
          "err_rulebase_invalid_operation",
          "err_installed_policy_mismatch",
          "err_server_certificate_operation_failed",
          "err_outbound_inspection_certificate_operation_failed",
          "err_gaia_api_login_failed",
          "err_gaia_api_send_command_failed",
          "err_cme_api_send_command_failed",
          "err_cme_api_not_running_failure",
          "err_infinity_unauthorized",
          "err_infinity_network",
          "err_too_many_requests"
        ]
      }
    ],
    "http_codes": {
      "success": [
        200
      ],
      "failure": [
        400,
        401,
        403,
        404,
        409,
        500,
        501
      ]
    }
  },
  "examples": {
    "install-policy": {
      "description": "",
      "request": "POST {{server}}/install-policy\nContent-Type: application/json\nX-chkp-sid: {{session}}\n\n{\n  \"policy-package\" : \"standard\",\n  \"access\" : true,\n  \"threat-prevention\" : true,\n  \"targets\" : [ \"corporate-gateway\" ]\n}",
      "response": ""
    }
  },
  "metadata": {
    "version": "2.0.1",
    "extracted_at": "2025-10-05T21:36:15.511252",
    "source_file": "install-policy.html"
  }
}